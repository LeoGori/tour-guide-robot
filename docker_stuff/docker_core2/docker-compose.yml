version: "3.7"

x-base: &base
  environment:
    - DISPLAY=${DISPLAY}
    - XAUTHORITY=/home/user1/.Xauthority
    - QT_X11_NO_MITSHM=1
#    - DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user1/1000/bus
    - LIBGL_ALWAYS_INDIRECT=0
    - YARP_COLORED_OUTPUT=1
    # - YARP_CLOCK=/clock
    - YARP_NAMESPACE=/root
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    - "/etc/hosts:/etc/hosts"
    - ".bashrc_local:/home/user1/.bashrc_local"

  network_mode: host
  ipc: host
  pid: host
  privileged: true
  security_opt:
    - apparmor:unconfined


services:

# Images
  ros2-r1-sim:
    image: elandini84/r1images:r1Core2_devel
    build:
      dockerfile: Dockerfile
      context: .

# containers
  terminator:
    image: elandini84/r1images:r1Core2_devel
    <<: *base
    container_name: terminator
    command: sh -c "yarp conf 172.17.0.1 10000; terminator --no-dbus"

  yarpserver:
    image: elandini84/r1images:r1Core2_devel
    <<: *base
    container_name: yarpserver
    command: sh -c "yarp conf 172.17.0.1 10000; yarpserver"

  gazebo:
    image: elandini84/r1images:r1Core2_devel
    <<: *base
    container_name: gazebo
    command: bash -c "yarp conf 172.17.0.1 10000; yarp wait $${YARP_NAMESPACE}; source /opt/ros/humble/setup.bash; ros2 launch gazebo_ros gazebo.launch.py world:=/home/user1/tour-guide-robot/app/maps/SIM_GAM/GAM.world"
    depends_on:
      - yarpserver

  yarpmanager:
    image: elandini84/r1images:r1Core2_devel
    <<: *base
    container_name: yarpmanager
    command: sh -c "yarp conf 172.17.0.1 10000; yarp wait $${YARP_NAMESPACE}; yarpmanager"
    depends_on:
      - yarpserver

  yarplogger:
    image: elandini84/r1images:r1Core2_devel
    <<: *base
    container_name: yarplogger
    command: sh -c "yarp conf 172.17.0.1 10000; yarp wait $${YARP_NAMESPACE}; yarplogger --start"
    depends_on:
      - yarpserver
